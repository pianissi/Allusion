diff --git a/node_modules/readdirp/index.js b/node_modules/readdirp/index.js
index cf739b2..38a7ed1 100644
--- a/node_modules/readdirp/index.js
+++ b/node_modules/readdirp/index.js
@@ -1,15 +1,23 @@
 'use strict';
 
-const fs = require('fs');
+// const fs = require('fs');
+const { fsPromises } = require('common/platform/fsPromises');
 const { Readable } = require('stream');
 const sysPath = require('path');
 const { promisify } = require('util');
 const picomatch = require('picomatch');
 
-const readdir = promisify(fs.readdir);
-const stat = promisify(fs.stat);
-const lstat = promisify(fs.lstat);
-const realpath = promisify(fs.realpath);
+// const readdir = promisify(fs.readdir);
+// const stat = promisify(fs.stat);
+// const lstat = promisify(fs.lstat);
+// const realpath = promisify(fs.realpath);
+
+const readdir = fsPromises.readdir;
+const stat = fsPromises.stat;
+const lstat = fsPromises.lstat;
+const realpath = fsPromises.realpath;
+
+
 
 /**
  * @typedef {Object} EntryInfo
@@ -30,8 +38,12 @@ const EVERYTHING_TYPE = 'all';
 const ALL_TYPES = [FILE_TYPE, DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE];
 
 const isNormalFlowError = error => NORMAL_FLOW_ERRORS.has(error.code);
-const [maj, min] = process.versions.node.split('.').slice(0, 2).map(n => Number.parseInt(n, 10));
-const wantBigintFsStats = process.platform === 'win32' && (maj > 10 || (maj === 10 && min >= 5));
+if (process.versions.node) {
+	const [maj, min] = process.versions.node.split('.').slice(0, 2).map(n => Number.parseInt(n, 10));
+	const wantBigintFsStats = process.platform === 'win32' && (maj > 10 || (maj === 10 && min >= 5));
+} else {
+	const wantBigintFsStats = false;
+}
 
 const normalizeFilter = filter => {
   if (filter === undefined) return;
